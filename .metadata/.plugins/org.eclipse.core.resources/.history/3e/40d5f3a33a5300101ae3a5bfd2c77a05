<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>CODE CIRCLE - 얼굴로 로그인</title>
<style>
    :root { --color-canvas-default: #0d1117; --color-neutral-subtle: #161b22; --color-border-default: #30363d; --color-fg-default: #e6edf3; --color-accent-fg: #1f6feb; --color-accent-emphasis: #238636; --color-fg-on-emphasis: #ffffff; }
    body { font-family: sans-serif; background-color: var(--color-canvas-default); color: var(--color-fg-default); display: flex; align-items: center; justify-content: center; min-height: 100vh; }
    .container { width: 100%; max-width: 420px; background-color: var(--color-neutral-subtle); border: 1px solid var(--color-border-default); border-radius: 6px; padding: 24px; }
    .btn { display: block; width: 100%; border: 1px solid var(--color-border-default); padding: 10px 12px; border-radius: 6px; font-size: 14px; font-weight: 500; cursor: pointer; text-align: center; background-color: var(--color-accent-emphasis); color: var(--color-fg-on-emphasis); }
    #webcam-container { position: relative; width: 100%; padding-top: 75%; background: #000; margin: 10px auto; border-radius: 6px; overflow: hidden; }
    #webcam { position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; }
    #status-text { text-align: center; color: #7d8590; height: 20px; margin-top: 8px; font-size: 12px; }
    #login-btn:disabled { opacity: 0.6; cursor: not-allowed; }
</style>
</head>
<body>
    <div class="container">
        <h2 style="text-align: center; margin-bottom: 20px;">얼굴로 로그인</h2>
        <div id="webcam-container">
            <video id="webcam" autoplay playsinline></video>
        </div>
        <button type="button" id="login-btn" class="btn" disabled>로그인</button>
        <div id="status-text">카메라 준비 중...</div>
        <div style="text-align: center; margin-top: 20px;">
             <a href="/user/login" style="color: var(--color-accent-fg); font-size: 12px;">ID/PW로 로그인</a>
        </div>
    </div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // 1번 표지판: 페이지의 HTML 로딩이 끝나고 스크립트가 실행되기 시작하는 지점
    console.log("1. 페이지 로딩 완료 (DOMContentLoaded). 스크립트를 시작합니다.");

    const video = document.getElementById('webcam');
    const loginBtn = document.getElementById('login-btn');
    const statusText = document.getElementById('status-text');

    // HTML 요소들이 제대로 찾아졌는지 확인
    if (!video || !loginBtn || !statusText) {
        console.error("필수 HTML 요소를 찾을 수 없습니다. id를 확인해주세요.");
        return; // 요소가 없으면 더 이상 진행하지 않음
    }

    async function startWebcam() {
        // 2번 표지판: startWebcam 함수가 호출되는 지점
        console.log("2. startWebcam 함수가 호출되었습니다.");
        statusText.textContent = '카메라 권한 요청 중...';
        
        try {
            // 3번 표지판: 가장 중요하고 실패 가능성이 있는 getUserMedia를 호출하기 직전
            console.log("3. navigator.mediaDevices.getUserMedia를 시도합니다...");
            
            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });
            
            // 4번 표지판: getUserMedia가 성공적으로 실행된 후
            console.log("4. getUserMedia 성공! 카메라 스트림을 받았습니다.");
            
            video.srcObject = stream;
            statusText.textContent = '카메라가 준비되었습니다. 로그인 버튼을 누르세요.';
            loginBtn.disabled = false;

        } catch (err) {
            // 5번 표지판: 에러가 발생하여 catch 블록으로 들어온 경우
            console.error("5. 카메라 접근 중 오류가 발생했습니다:", err);
            statusText.textContent = '카메라를 사용할 수 없습니다. (F12 콘솔 확인)';
            
            // 여기서 코드 실행을 강제로 멈추고 개발자 도구의 Sources 탭을 활성화합니다.
            debugger; 
        }
    }

    // 함수 실행
    startWebcam();
});
</script>
</body>
</html>