<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>관리자 대시보드 - 사용자 관리</title>
<style>
    /* === 기본 및 전역 설정 === */
    :root {
        --color-canvas-default: #0d1117;
        --color-canvas-subtle: #161b22;
        --color-border-default: #30363d;
        --color-fg-default: #e6edf3;
        --color-fg-muted: #7d8590;
        --color-accent-fg: #1f6feb;
    }
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; background-color: var(--color-canvas-default); color: var(--color-fg-default); margin: 0; padding: 24px; }
    .container { max-width: 1200px; margin: 0 auto; }
    h1 { color: #f8c555; border-bottom: 1px solid var(--color-border-default); padding-bottom: 16px; }
    a { color: var(--color-accent-fg); text-decoration: none; }
    .search-bar { margin: 24px 0; display: flex; gap: 8px; }
    .form-control { width: 100%; padding: 8px 12px; background: var(--color-canvas-default); border: 1px solid var(--color-border-default); border-radius: 6px; color: var(--color-fg-default); font-size: 14px; box-sizing: border-box; }
    .btn { border: 1px solid var(--color-border-default); padding: 6px 16px; border-radius: 6px; font-size: 14px; font-weight: 500; cursor: pointer; background-color: #21262d; color: var(--color-fg-default); }
    .btn:hover { background-color: #30363d; }
    .table-container { border: 1px solid var(--color-border-default); border-radius: 6px; overflow: hidden; }
    table { width: 100%; border-collapse: collapse; }
    th, td { padding: 12px 16px; text-align: left; border-bottom: 1px solid #30363d; font-size: 14px; }
    thead { background-color: var(--color-canvas-subtle); font-size: 12px; }
    tbody tr:hover { background-color: rgba(172, 207, 255, 0.05); }
    td select { background: var(--color-canvas-default); color: var(--color-fg-default); border: 1px solid var(--color-border-default); padding: 4px 8px; border-radius: 6px; }
    td .btn { padding: 4px 10px; font-size: 12px; }
    .pagination { display: flex; justify-content: center; align-items: center; margin-top: 24px; gap: 8px; }
    .pagination a, .pagination span { font-size: 14px; }
    .pagination .current-page { font-weight: bold; color: white; }
</style>
</head>
<body>
    <div class="container">
        <h1>사용자 관리</h1>

        <div class="search-bar">
            <form style="display: flex; gap: 8px; width: 100%;">
                <input type="text" name="keyword" class="form-control" placeholder="아이디 또는 닉네임으로 검색" value="{{keyword}}">
                <button type="submit" class="btn">검색</button>
            </form>
        </div>

        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>아이디</th>
                        <th>닉네임</th>
                        <th>이메일</th>
                        <th>가입일</th>
                        <th>등급</th>
                        <th>관리</th>
                    </tr>
                </thead>
                <tbody>
                    {{#memberPage.content}}
                    <tr>
                        <td>{{id}}</td>
                        <td>{{nickName}}</td>
                        <td>{{email}}</td>
                        <td>{{createDate}}</td>
                        <td>
                            <select onchange="updateUserType('{{id}}', this.value)">
                                <option value="U" {{#isUser}}selected{{/isUser}}>일반유저</option>
                                <option value="A" {{#isAdmin}}selected{{/isAdmin}}>관리자</option>
                            </select>
                        </td>
                        <td>
                            <button class="btn" style="background-color: #8b2927;" onclick="deleteUser('{{id}}')">삭제</button>
                        </td>
                    </tr>
                    {{/memberPage.content}}
                    {{^memberPage.content}}
                    <tr>
                        <td colspan="6" style="text-align: center; padding: 40px 0; color: var(--color-fg-muted);">표시할 사용자가 없습니다.</td>
                    </tr>
                    {{/memberPage.content}}
                </tbody>
            </table>
        </div>

        <div class="pagination">
            {{#memberPage.hasPrevious}}
                <a href="?page={{memberPage.previousPageable.pageNumber}}&keyword={{keyword}}" class="btn">&lt; 이전</a>
            {{/memberPage.hasPrevious}}

            <span class="current-page">{{memberPage.number}} / {{memberPage.totalPages}}</span>

            {{#memberPage.hasNext}}
                <a href="?page={{memberPage.nextPageable.pageNumber}}&keyword={{keyword}}" class="btn">다음 &gt;</a>
            {{/memberPage.hasNext}}
        </div>
    </div>

<script>
    // 사용자 등급 변경 함수
    async function updateUserType(userId, newType) {
        const typeName = newType === 'A' ? '관리자' : '일반유저';
        if (!confirm(`${userId} 사용자의 등급을 '${typeName}' (으)로 변경하시겠습니까?`)) {
            location.reload();
            return;
        }
        try {
            const response = await fetch(`/admin/users/${userId}/type`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ type: newType })
            });
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || '등급 변경 실패');
            }
            alert('등급이 성공적으로 변경되었습니다.');
        } catch (error) {
            alert(error.message);
            location.reload();
        }
    }

    // 사용자 삭제 함수
    async function deleteUser(userId) {
        if (!confirm(`'${userId}' 사용자를 정말로 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`)) return;
        try {
            const response = await fetch(`/admin/users/${userId}`, {
                method: 'DELETE'
            });
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || '삭제 실패');
            }
            alert('사용자가 삭제되었습니다.');
            location.reload();
        } catch (error) {
            alert(error.message);
        }
    }
</script>
</body>
</html>