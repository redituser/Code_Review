<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>마이페이지 - CODE CIRCLE</title>
<style>
    /* === 기본 및 전역 설정 === */
    :root {
        --color-canvas-default: #0d1117;
        --color-canvas-subtle: #161b22;
        --color-border-default: #30363d;
        --color-border-muted: #21262d;
        --color-fg-default: #e6edf3;
        --color-fg-muted: #7d8590;
        --color-accent-fg: #1f6feb;
        --color-accent-emphasis: #238636;
        --color-danger-fg: #f85149;
        --font-family-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    }
    body {
        font-family: var(--font-family-sans);
        background-color: var(--color-canvas-default);
        color: var(--color-fg-default);
        margin: 0;
    }
    a { color: var(--color-accent-fg); text-decoration: none; }
    a:hover { text-decoration: underline; }

    /* === 페이지 레이아웃 === */
    .header {
        background-color: var(--color-canvas-subtle);
        padding: 16px 24px;
        border-bottom: 1px solid var(--color-border-default);
        font-size: 20px;
        font-weight: 600;
    }
    .page-container {
        display: flex;
        max-width: 1012px;
        margin: 24px auto;
        gap: 24px;
    }
    .side-nav {
        width: 25%;
        min-width: 200px;
    }
    .main-content {
        width: 75%;
    }

    /* === 사이드 네비게이션 메뉴 === */
    .menu-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    .menu-item a {
        display: block;
        padding: 8px 16px;
        border: 1px solid transparent;
        border-radius: 6px;
        font-weight: 500;
        color: var(--color-fg-default);
    }
    .menu-item a.active,
    .menu-item a:hover {
        background-color: var(--color-canvas-subtle);
        border-color: var(--color-border-muted);
        text-decoration: none;
    }
    .menu-item a.active {
        font-weight: 600;
    }
    
    /* === 메인 컨텐츠 카드 스타일 === */
    .card {
        border: 1px solid var(--color-border-default);
        border-radius: 6px;
        background-color: var(--color-canvas-subtle);
    }
    .card-header {
        padding: 16px;
        border-bottom: 1px solid var(--color-border-default);
    }
    .card-header h2 {
        margin: 0;
        font-size: 20px;
    }
    .card-body {
        padding: 16px;
    }
    .form-group {
        margin-bottom: 16px;
    }
    .form-group label {
        display: block;
        font-weight: 600;
        margin-bottom: 8px;
    }
    .form-control {
        width: 100%;
        padding: 8px 12px;
        background: var(--color-canvas-default);
        border: 1px solid var(--color-border-default);
        border-radius: 6px;
        color: var(--color-fg-default);
        font-size: 14px;
        box-sizing: border-box;
    }
    .form-control:disabled {
        background: #21262d;
        color: var(--color-fg-muted);
    }
    .form-control:focus {
        outline: none;
        border-color: var(--color-accent-fg);
        box-shadow: 0 0 0 3px rgba(31, 111, 235, 0.3);
    }
    .card-footer {
        padding: 16px;
        background-color: rgba(33, 38, 45, 0.5);
        border-top: 1px solid var(--color-border-default);
        text-align: right;
    }
    .btn {
        border: 1px solid var(--color-border-default);
        padding: 6px 16px;
        border-radius: 6px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
        background-color: #21262d;
        color: var(--color-fg-default);
    }
    .btn:hover { background-color: #30363d; }
    .btn-primary { background-color: var(--color-accent-emphasis); color: #ffffff; border-color: var(--color-accent-emphasis); }

    /* 탭 컨텐츠 숨기기/보이기 */
    .tab-content {
        display: none;
    }
    .tab-content.active {
        display: block;
    }
</style>
</head>
<body>

    <header class="header">
        <div style="max-width: 1012px; margin: 0 auto;">마이페이지</div>
    </header>

    <div class="page-container">
        <!-- 왼쪽 네비게이션 메뉴 -->
        <aside class="side-nav">
            <ul class="menu-list" id="myPageNav">
                <li class="menu-item">
                    <a href="#profile" class="active">프로필</a>
                </li>
                <li class="menu-item">
                    <a href="#account">계정</a>
                </li>
                <li class="menu-item">
                    <a href="#activity">내 활동</a>
                </li>
            </ul>
        </aside>

        <!-- 오른쪽 메인 컨텐츠 -->
        <main class="main-content">
            <!-- 프로필 탭 -->
         div id="profile" class="tab-content active">
    <form id="profileUpdateForm">
        <div class="card">
            <div class="card-header"><h2>공개 프로필</h2></div>
            <div class="card-body">
                <div class="form-group">
                    <label for="profileId">아이디</label>
                    <input type="text" id="profileId" class="form-control" value="{{member.id}}" disabled>
                </div>
                <div class="form-group">
                    <label for="profileNickname">닉네임</label>
                    <input type="text" id="profileNickname" name="nickname" class="form-control" value="{{member.nickName}}" required>
                </div>
                <div class="form-group">
                    <label for="profileEmail">이메일</label>
                    <input type="email" id="profileEmail" name="email" class="form-control" value="{{member.email}}" required>
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary">프로필 업데이트</button>
            </div>
        </div>
    </form>
</div>

            <!-- 계정 탭 (미구현 상태) -->
            <div id="account" class="tab-content">
                 <div class="card">
                    <div class="card-header"><h2>비밀번호 변경</h2></div>
                    <div class="card-body">
                        <p>이 곳에 비밀번호 변경 폼이 들어갈 예정입니다.</p>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary">비밀번호 변경</button>
                    </div>
                </div>
            </div>

            <!-- 내 활동 탭 (미구현 상태) -->
            <div id="activity" class="tab-content">
                 <div class="card">
                    <div class="card-header"><h2>작성한 질문/답변</h2></div>
                    <div class="card-body">
                        <p>이 곳에 내가 작성한 글 목록이 들어갈 예정입니다.</p>
                    </div>
                </div>
            </div>
        </main>
    </div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const navLinks = document.querySelectorAll('#myPageNav a');
    const tabContents = document.querySelectorAll('.tab-content');

    // 탭 메뉴 클릭 이벤트 처리
    navLinks.forEach(link => {
        link.addEventListener('click', (event) => {
            event.preventDefault();
            
            // 모든 링크와 컨텐츠에서 'active' 클래스 제거
            navLinks.forEach(l => l.classList.remove('active'));
            tabContents.forEach(t => t.classList.remove('active'));

            // 클릭된 링크와 그에 맞는 컨텐츠에 'active' 클래스 추가
            const targetId = link.getAttribute('href').substring(1);
            link.classList.add('active');
            document.getElementById(targetId).classList.add('active');
        });
    });

    // 프로필 업데이트 폼 제출 이벤트
    const profileForm = document.getElementById('profileUpdateForm');
    profileForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        
        const formData = new FormData(profileForm);
        const data = {
            nickname: formData.get('nickname'),
            email: formData.get('email')
        };

        try {
            const response = await fetch('/api/member/profile', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                alert('프로필이 성공적으로 업데이트되었습니다.');
                // 필요 시 페이지 새로고침 또는 UI 업데이트
            } else {
                const errorResult = await response.json();
                throw new Error(errorResult.message || '업데이트에 실패했습니다.');
            }
        } catch (error) {
            alert(error.message);
            console.error('Profile update failed:', error);
        }
    });
});
</script>

</body>
</html>
