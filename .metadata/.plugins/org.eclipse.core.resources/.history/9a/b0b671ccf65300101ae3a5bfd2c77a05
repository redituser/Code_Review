package com.assignment.comment.controller;

import com.assignment.comment.service.CommentService;
import com.assignment.comment.vo.CommentVO;
import jakarta.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
// ★★★ [수정] 이 부분이 누락되었을 가능성이 높습니다. 아래 어노테이션을 추가해주세요. ★★★
@RequestMapping("/api/board/{boardNo}/comments") 
public class CommentController {

    @Autowired
    private CommentService commentService;

    // 댓글 목록 조회 API
    // 이제 이 메서드의 전체 경로는 GET /api/board/{boardNo}/comments 가 됩니다.
    @GetMapping
    public ResponseEntity<List<CommentVO>> getComments(@PathVariable("boardNo") Integer boardNo) {
        List<CommentVO> comments = commentService.getCommentsByBoardNo(boardNo);
        return ResponseEntity.ok(comments);
    }

    // 새 댓글/대댓글 작성 API
    // 이 메서드의 전체 경로는 POST /api/board/{boardNo}/comments 가 됩니다.
    @PostMapping
    public ResponseEntity<?> addComment(@PathVariable("boardNo") Integer boardNo,
                                        @RequestBody CommentVO comment,
                                        HttpSession session) {
        String loginId = (String) session.getAttribute("loginId");
        if (loginId == null) {
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("로그인이 필요합니다.");
        }

        comment.setBoardNo(boardNo);
        comment.setWriterId(loginId);
        
        CommentVO savedComment = commentService.addComment(comment);
        return ResponseEntity.status(HttpStatus.CREATED).body(savedComment);
    }
}